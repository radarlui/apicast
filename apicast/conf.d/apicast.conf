set_by_lua $deployment 'return os.getenv("THREESCALE_DEPLOYMENT_ENV");';

# TODO: enable in the future when we support SSL
# ssl_certificate_by_lua_block { require('module').call() }
# ssl_session_fetch_by_lua_block { require('module').call() }
# ssl_session_store_by_lua_block { require('module').call() }

location = /threescale_authrep {
  internal;

  proxy_pass_request_headers off;
  proxy_http_version 1.1;
  proxy_pass $backend_endpoint/transactions/authrep.xml?$backend_authentication_type=$backend_authentication_value&service_id=$service_id&$usage&$credentials&log%5Bcode%5D=$arg_code&log%5Brequest%5D=$arg_req&log%5Bresponse%5D=$arg_resp;
  proxy_set_header  Host  "$backend_host";
  proxy_set_header  X-3scale-User-Agent "nginx$deployment";
  proxy_set_header  X-3scale-Version "$version";
  proxy_set_header  Connection "";

  log_by_lua_block {
    ngx.log(ngx.INFO, '[authrep] ' .. ngx.var.request_uri .. ' ' .. ngx.var.status)
  }
}


location @out_of_band_authrep_action {
  internal;

  proxy_pass_request_headers off;

  set_by_lua $original_request_time 'return ngx.var.request_time';

  log_by_lua_block {
    ngx.var.post_action_impact = ngx.var.request_time - ngx.var.original_request_time
    ngx.log(ngx.INFO, '[authrep] ' .. ngx.var.request_uri .. ' ' .. ngx.var.status)
  }

  content_by_lua_block { require('module').call() }
}

location / {
  set $cached_key null;
  set $credentials null;
  set $access_token null;
  set $usage null;
  set $service_id null;
  set $proxy_pass null;
  set $secret_token null;
  set $resp_body null;
  set $resp_headers null;

  set $client_id null;
  set $redirect_url null;

  set $backend_host 'backend';
  set $backend_endpoint 'http://127.0.0.1:8081';
  set $backend_authentication_type null;
  set $backend_authentication_value null;
  set $version null;

  set $post_action_impact null;

  proxy_ignore_client_abort on;

  rewrite_by_lua_block { require('module').call() }
  access_by_lua_block { require('module').call() }
  body_filter_by_lua_block { require('module').call() }
  header_filter_by_lua_block { require('module').call() }
  log_by_lua_block { require('module').call() }

  proxy_pass $proxy_pass;
  proxy_http_version 1.1;
  proxy_set_header X-Real-IP  $remote_addr;
  proxy_set_header Host $http_host;
  proxy_set_header X-3scale-proxy-secret-token $secret_token;
  proxy_set_header X-3scale-debug "";
  proxy_set_header Connection "";

  post_action @out_of_band_authrep_action;
}

location = /_threescale/oauth_store_token {
  internal;
  proxy_set_header  X-Real-IP  $remote_addr;
  proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;

  proxy_pass $backend_endpoint/services/$service_id/oauth_access_tokens.xml?$backend_authentication_type=$backend_authentication_value;
}

location /_threescale/oauth_authorize {
  internal; # changed, wasnt before

  proxy_set_header  X-Real-IP  $remote_addr;
  proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header  Host  "$backend_host";
  proxy_set_header  X-3scale-User-Agent "nginx$deployment";
  proxy_set_header  X-3scale-Version "$version";

  proxy_ignore_client_abort on;
  proxy_pass $backend_endpoint/transactions/oauth_authorize.xml?$backend_authentication_type=$backend_authentication_value&service_id=$service_id&access_token=$arg_access_token&$usage;
}

location = /_threescale/check_credentials {
  internal;

  proxy_set_header  X-Real-IP  $remote_addr;
  proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;

  proxy_pass $backend_endpoint/transactions/oauth_authorize.xml?$backend_authentication_type=$backend_authentication_value&service_id=$service_id&$args;
}

location = /threescale_oauth_authrep {
  internal;
  proxy_set_header  Host  "$backend_host";
  proxy_set_header  X-3scale-User-Agent "nginx$deployment";
  proxy_set_header  X-3scale-Version "$version";
  proxy_set_header  X-3scale-OAuth2-Grant-Type "authorization_code";

  proxy_pass $backend_endpoint/transactions/oauth_authrep.xml?$backend_authentication_type=$backend_authentication_value&service_id=$service_id&$usage&$credentials&log%5Bcode%5D=$arg_code&log%5Brequest%5D=$arg_req&log%5Bresponse%5D=$arg_resp;
}

location = /_threescale/client_secret_matches {
  internal;
  proxy_set_header  X-Real-IP  $remote_addr;
  proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;

  proxy_pass $backend_endpoint/transactions/oauth_authorize.xml?$backend_authentication_type=$backend_authentication_value&service_id=$service_id&app_id=$client_id;
}
